import unittest
from tekoaly.minimax import MiniMax


class PelilautaTesti(unittest.TestCase):
    def setUp(self):
        self.pelilauta = [["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_",
                              "_", "_", "_", "_", "_", "_", "_"],
                          ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"]]

    def test_estaa_voiton(self):
        pelilauta = [["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "X", "O", "O", "O",
                         "O", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"]]
        tekoaly = MiniMax(pelilauta, "O")
        tekoaly.lisaa_varattu_paikka(5, 4)
        tekoaly.lisaa_varattu_paikka(5, 5)
        tekoaly.lisaa_varattu_paikka(5, 6)
        tekoaly.lisaa_varattu_paikka(5, 7)
        tekoaly.lisaa_varattu_paikka(5, 8)

        siirto = tekoaly.valitse_paras_siirto()

        self.assertEqual(siirto, (5, 9))

    def test_tekee_voiton(self):
        pelilauta = [["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "X", "O", "O", "O",
                         "O", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"]]
        tekoaly = MiniMax(pelilauta, "X")
        tekoaly.lisaa_varattu_paikka(5, 4)
        tekoaly.lisaa_varattu_paikka(5, 5)
        tekoaly.lisaa_varattu_paikka(5, 6)
        tekoaly.lisaa_varattu_paikka(5, 7)
        tekoaly.lisaa_varattu_paikka(5, 8)

        siirto = tekoaly.valitse_paras_siirto()

        self.assertEqual(siirto, (5, 9))

    def tekee_valitsee_voiton1(self):
        pelilauta = [["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "X", "X", "X", "X",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "O", "O", "O", "O",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_",
                         "_", "_", "_", "_", "_", "_", "_"],
                     ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_", "_"]]
        tekoaly = MiniMax(pelilauta, "X")
        tekoaly.lisaa_varattu_paikka(5, 4)
        tekoaly.lisaa_varattu_paikka(6, 4)
        tekoaly.lisaa_varattu_paikka(5, 5)
        tekoaly.lisaa_varattu_paikka(6, 5)
        tekoaly.lisaa_varattu_paikka(5, 6)
        tekoaly.lisaa_varattu_paikka(6, 6)
        tekoaly.lisaa_varattu_paikka(5, 7)
        tekoaly.lisaa_varattu_paikka(6, 7)

        siirto = tekoaly.valitse_paras_siirto()

        self.assertEqual(siirto, (6, 8))
